name: Smart CI/CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  detect-changes:
    name: Detect Module Changes
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.detect.outputs.backend-changed }}
      frontend-changed: ${{ steps.detect.outputs.frontend-changed }}
      docker-changed: ${{ steps.detect.outputs.docker-changed }}
      workflows-changed: ${{ steps.detect.outputs.workflows-changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Make GHA script executable
        run: chmod +x scripts/gha-smart-ci.sh

      - name: Detect changes using GHA script
        id: detect
        run: ./scripts/gha-smart-ci.sh detect

  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: 24
          distribution: corretto
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make GHA script executable
        run: chmod +x scripts/gha-smart-ci.sh

      - name: Validate and build backend
        id: backend-build
        run: |
          ./scripts/gha-smart-ci.sh validate backend
          ./scripts/gha-smart-ci.sh build backend

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: teleheal-backend/build/libs/
          retention-days: 1

      - name: Publish Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: "**/teleheal-backend/build/test-results/test/TEST-*.xml"
          check_name: "Backend Test Results"
          comment_mode: "always"
          fail_on: "nothing"
          report_individual_runs: true
          check_run_annotations: "all tests"
          github_token: ${{ secrets.GITHUB_TOKEN }}

  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: teleheal-ui/package-lock.json

      - name: Make GHA script executable
        run: chmod +x scripts/gha-smart-ci.sh

      - name: Validate and build frontend
        id: frontend-build
        run: |
          ./scripts/gha-smart-ci.sh validate frontend
          ./scripts/gha-smart-ci.sh build frontend
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: teleheal-ui/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: teleheal-ui/dist/
          retention-days: 1

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [detect-changes, backend-ci, frontend-ci]
    if: always() && (needs.detect-changes.outputs.backend-changed == 'true' || needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.docker-changed == 'true')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build backend Docker image
        if: needs.detect-changes.outputs.backend-changed == 'true' || needs.detect-changes.outputs.docker-changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./teleheal-backend
          push: false
          tags: teleheal-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build frontend Docker image
        if: needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.docker-changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./teleheal-ui
          push: false
          tags: teleheal-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [detect-changes, backend-ci, frontend-ci, docker-build]
    if: always() && (needs.detect-changes.outputs.backend-changed == 'true' || needs.detect-changes.outputs.frontend-changed == 'true' || needs.detect-changes.outputs.docker-changed == 'true')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and test with docker-compose
        run: |
          docker-compose build
          docker-compose up -d
          
      - name: Wait for services to be ready
        run: |
          echo "Waiting for backend to be ready..."
          timeout 60 bash -c 'until curl -f http://localhost:8080/api/health 2>/dev/null; do sleep 2; done' || echo "Backend health check timeout"
          echo "Waiting for frontend to be ready..."
          timeout 60 bash -c 'until curl -f http://localhost:9000 2>/dev/null; do sleep 2; done' || echo "Frontend health check timeout"
          
      - name: Run integration tests
        run: |
          echo "Running integration tests..."
          curl -f http://localhost:8080/api/health || exit 1
          curl -f http://localhost:9000 || exit 1
          
      - name: Cleanup
        if: always()
        run: |
          docker-compose down
          docker-compose rm -f

  summary:
    name: CI/CD Summary
    runs-on: ubuntu-latest
    needs: [detect-changes, backend-ci, frontend-ci, docker-build, integration-test]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Make script executable
        run: chmod +x scripts/smart-ci-cd.sh
        
      - name: Generate summary
        run: |
          echo "## Smart CI/CD Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Module Changes Detected:" >> $GITHUB_STEP_SUMMARY
          echo "- Backend: ${{ needs.detect-changes.outputs.backend-changed }}" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend: ${{ needs.detect-changes.outputs.frontend-changed }}" >> $GITHUB_STEP_SUMMARY
          echo "- Docker: ${{ needs.detect-changes.outputs.docker-changed }}" >> $GITHUB_STEP_SUMMARY
          echo "- Workflows: ${{ needs.detect-changes.outputs.workflows-changed }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Job Results:" >> $GITHUB_STEP_SUMMARY
          echo "- Backend CI: ${{ needs.backend-ci.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend CI: ${{ needs.frontend-ci.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Docker Build: ${{ needs.docker-build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests: ${{ needs.integration-test.result }}" >> $GITHUB_STEP_SUMMARY
